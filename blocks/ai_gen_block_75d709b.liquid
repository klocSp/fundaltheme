{% doc %}
  @prompt
    Collection Card carosel 
    with option to select collection 
    how many slides want to show also code want like section not for block 
    
    carosel should be work also preset

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-carousel-{{ ai_gen_id }} {
    width: 100%;
    overflow: hidden;
    position: relative;
  }

  .ai-collection-carousel__container-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.card_gap }}px;
  }

  .ai-collection-carousel__card-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.slides_to_show | minus: 1 }} * {{ block.settings.card_gap }}px)) / {{ block.settings.slides_to_show }});
    background-color: {{ block.settings.card_background_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: transform 0.3s ease;
  }

  .ai-collection-carousel__card-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
  }

  .ai-collection-carousel__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.image_height }}px;
    overflow: hidden;
  }

  .ai-collection-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-collection-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-collection-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-collection-carousel__content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
  }

  .ai-collection-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    color: {{ block.settings.title_color }};
    margin: 0 0 8px 0;
    line-height: 1.3;
  }

  .ai-collection-carousel__description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.description_color }};
    margin: 0 0 12px 0;
    line-height: 1.4;
  }

  .ai-collection-carousel__product-count-{{ ai_gen_id }} {
    font-size: {{ block.settings.count_size }}px;
    color: {{ block.settings.count_color }};
    margin: 0;
  }

  .ai-collection-carousel__controls-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 16px;
    margin-top: 24px;
  }

  .ai-collection-carousel__button-{{ ai_gen_id }} {
    width: 44px;
    height: 44px;
    border-radius: 50%;
    border: none;
    background-color: {{ block.settings.button_background_color }};
    color: {{ block.settings.button_text_color }};
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .ai-collection-carousel__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: scale(1.1);
  }

  .ai-collection-carousel__button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
    transform: none;
  }

  .ai-collection-carousel__dots-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
  }

  .ai-collection-carousel__dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    border: none;
    background-color: {{ block.settings.dot_color }};
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.3;
  }

  .ai-collection-carousel__dot-{{ ai_gen_id }}.active {
    opacity: 1;
    transform: scale(1.2);
  }

  .ai-collection-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-collection-carousel__empty-title-{{ ai_gen_id }} {
    font-size: 18px;
    font-weight: 600;
    margin: 0 0 8px 0;
  }

  .ai-collection-carousel__empty-text-{{ ai_gen_id }} {
    font-size: 14px;
    margin: 0;
  }

  @media screen and (max-width: 749px) {
    .ai-collection-carousel__card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.slides_to_show_mobile | minus: 1 }} * {{ block.settings.card_gap }}px)) / {{ block.settings.slides_to_show_mobile }});
    }
  }
{% endstyle %}

<collection-carousel-{{ ai_gen_id }}
  class="ai-collection-carousel-{{ ai_gen_id }}"
  data-slides-desktop="{{ block.settings.slides_to_show }}"
  data-slides-mobile="{{ block.settings.slides_to_show_mobile }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.selected_collections != blank and block.settings.selected_collections.size > 0 %}
    <div class="ai-collection-carousel__container-{{ ai_gen_id }}">
      {% for collection in block.settings.selected_collections %}
        <a
          href="{{ collection.url }}"
          class="ai-collection-carousel__card-{{ ai_gen_id }}"
        >
          <div class="ai-collection-carousel__image-wrapper-{{ ai_gen_id }}">
            {% if collection.featured_image %}
              <img
                src="{{ collection.featured_image | image_url: width: 600 }}"
                alt="{{ collection.featured_image.alt | escape }}"
                class="ai-collection-carousel__image-{{ ai_gen_id }}"
                loading="lazy"
                width="600"
                height="{{ block.settings.image_height }}"
              >
            {% else %}
              <div class="ai-collection-carousel__image-placeholder-{{ ai_gen_id }}">
                {{ 'collection-1' | placeholder_svg_tag }}
              </div>
            {% endif %}
          </div>
          <div class="ai-collection-carousel__content-{{ ai_gen_id }}">
            <h3 class="ai-collection-carousel__title-{{ ai_gen_id }}">
              {{ collection.title }}
            </h3>
            {% if collection.description != blank and block.settings.show_description %}
              <p class="ai-collection-carousel__description-{{ ai_gen_id }}">
                {{ collection.description | truncate: 100 }}
              </p>
            {% endif %}
            {% if block.settings.show_product_count %}
              <p class="ai-collection-carousel__product-count-{{ ai_gen_id }}">
                {{ collection.products_count }}
                {% if collection.products_count == 1 %}
                  product
                {% else %}
                  products
                {% endif %}
              </p>
            {% endif %}
          </div>
        </a>
      {% endfor %}
    </div>

    {% if block.settings.show_controls %}
      <div class="ai-collection-carousel__controls-{{ ai_gen_id }}">
        <button
          class="ai-collection-carousel__button-{{ ai_gen_id }} ai-collection-carousel__prev-{{ ai_gen_id }}"
          aria-label="Previous slide"
        >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
        </button>

        <div class="ai-collection-carousel__dots-{{ ai_gen_id }}"></div>

        <button
          class="ai-collection-carousel__button-{{ ai_gen_id }} ai-collection-carousel__next-{{ ai_gen_id }}"
          aria-label="Next slide"
        >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
        </button>
      </div>
    {% endif %}
  {% else %}
    <div class="ai-collection-carousel__empty-state-{{ ai_gen_id }}">
      <h3 class="ai-collection-carousel__empty-title-{{ ai_gen_id }}">No collections selected</h3>
      <p class="ai-collection-carousel__empty-text-{{ ai_gen_id }}">
        Select collections to display in this carousel
      </p>
    </div>
  {% endif %}
</collection-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.slidesDesktop = parseInt(this.dataset.slidesDesktop) || 3;
        this.slidesMobile = parseInt(this.dataset.slidesMobile) || 1;
      }

      connectedCallback() {
        this.container = this.querySelector('.ai-collection-carousel__container-{{ ai_gen_id }}');
        this.cards = this.querySelectorAll('.ai-collection-carousel__card-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-collection-carousel__prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-collection-carousel__next-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-collection-carousel__dots-{{ ai_gen_id }}');

        if (!this.container || this.cards.length === 0) return;

        this.setupCarousel();
        this.setupEventListeners();
        this.updateCarousel();
      }

      setupCarousel() {
        this.totalSlides = this.cards.length;
        this.createDots();
        this.updateButtons();
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.prevSlide());
        }
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        window.addEventListener('resize', () => this.updateCarousel());
      }

      getCurrentSlidesPerView() {
        return window.innerWidth <= 749 ? this.slidesMobile : this.slidesDesktop;
      }

      getMaxSlide() {
        const slidesPerView = this.getCurrentSlidesPerView();
        return Math.max(0, this.totalSlides - slidesPerView);
      }

      createDots() {
        if (!this.dotsContainer) return;

        this.dotsContainer.innerHTML = '';
        const maxSlide = this.getMaxSlide();

        for (let i = 0; i <= maxSlide; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-collection-carousel__dot-{{ ai_gen_id }}';
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      updateCarousel() {
        const maxSlide = this.getMaxSlide();
        if (this.currentSlide > maxSlide) {
          this.currentSlide = maxSlide;
        }

        const translateX = -this.currentSlide * (100 / this.getCurrentSlidesPerView());
        this.container.style.transform = `translateX(${translateX}%)`;

        this.updateButtons();
        this.updateDots();
      }

      updateButtons() {
        if (!this.prevButton || !this.nextButton) return;

        const maxSlide = this.getMaxSlide();
        this.prevButton.disabled = this.currentSlide <= 0;
        this.nextButton.disabled = this.currentSlide >= maxSlide;
      }

      updateDots() {
        const dots = this.querySelectorAll('.ai-collection-carousel__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateCarousel();
        }
      }

      nextSlide() {
        const maxSlide = this.getMaxSlide();
        if (this.currentSlide < maxSlide) {
          this.currentSlide++;
          this.updateCarousel();
        }
      }

      goToSlide(slideIndex) {
        const maxSlide = this.getMaxSlide();
        this.currentSlide = Math.max(0, Math.min(slideIndex, maxSlide));
        this.updateCarousel();
      }
    }

    customElements.define('collection-carousel-{{ ai_gen_id }}', CollectionCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection carousel",
  "settings": [
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "collection_list",
      "id": "selected_collections",
      "label": "Collections",
      "limit": 12
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "slides_to_show",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Slides to show on desktop",
      "default": 3
    },
    {
      "type": "select",
      "id": "slides_to_show_mobile",
      "label": "Slides to show on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "card_gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between cards",
      "default": 20
    },
    {
      "type": "checkbox",
      "id": "show_controls",
      "label": "Show navigation controls",
      "default": true
    },
    {
      "type": "header",
      "content": "Card content"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show collection description",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "label": "Show product count",
      "default": true
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 150,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 250
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "count_color",
      "label": "Product count color",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "range",
      "id": "count_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Product count size",
      "default": 12
    }
  ],
  "presets": [
    {
      "name": "Collection carousel"
    }
  ],
  "tag": null
}
{% endschema %}