{% doc %}
  @prompt
    Collection list venum same like theme but grid and  carosel options
    
    
    Per row 4 columns
    after 2 row show more button for grid 
    
    carosel destop and mobile option 
    
    collection list show only title but hover are click it goes to url 
    
    url option also need

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
 #shopify-block-{{ block.id }} {
      width: 100%;
    max-width: 100%;
    padding-bottom: {{ block.settings.section_padding_bottom }}px;
    padding-top: {{ block.settings.section_padding_top }}px;
}
  .ai-collection-list-{{ ai_gen_id }} {
    width: 100%;
    padding: {{ block.settings.section_padding }}px 0;
  }

  .ai-collection-list-container-{{ ai_gen_id }} {
        width: 100%;
    max-width: 100%;
    margin: 0 auto;
  }

  .ai-collection-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: {{ block.settings.grid_gap }}px;
    margin-bottom: 30px;
  }

  .ai-collection-carousel-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-collection-carousel-track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.grid_gap }}px;
  }

  .ai-collection-item-{{ ai_gen_id }} {
    position: relative;
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    background-color: #fff;
    border: 1px solid #efefef;
    background-color: {{ block.settings.item_background_color }};
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
    text-decoration: none;
    color: inherit;
    display: block;
    min-width: calc(25% - {{ block.settings.grid_gap | times: 0.75 }}px);
  }

  .ai-collection-item-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  }

  .ai-collection-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    position: relative;
    overflow: hidden;
  }

  .ai-collection-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-collection-item-{{ ai_gen_id }}:hover .ai-collection-image-{{ ai_gen_id }} img {
    transform: scale(1.05);
  }

  .ai-collection-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-collection-image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-collection-title-{{ ai_gen_id }} {
    padding: {{ block.settings.title_padding }}px;
    text-align: center;
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: {{ block.settings.title_font_weight }};
    color: {{ block.settings.title_color }};
    margin: 0;
    transition: color 0.3s ease;
  }

  .ai-collection-item-{{ ai_gen_id }}:hover .ai-collection-title-{{ ai_gen_id }} {
    color: {{ block.settings.title_hover_color }};
  }

  .ai-show-more-btn-{{ ai_gen_id }} {
    display: block;
    margin: 30px auto 0;
    padding: 12px 30px;
    background-color: {{ block.settings.button_background_color }};
    color: {{ block.settings.button_text_color }};
    border: 2px solid {{ block.settings.button_border_color }};
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .ai-show-more-btn-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background_color }};
    color: {{ block.settings.button_hover_text_color }};
    border-color: {{ block.settings.button_hover_border_color }};
  }

  .ai-carousel-controls-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: 20px;
  }

  .ai-carousel-btn-{{ ai_gen_id }} {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: {{ block.settings.carousel_button_color }};
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    color: {{ block.settings.carousel_button_icon_color }};
  }

  .ai-carousel-btn-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.carousel_button_hover_color }};
    transform: scale(1.1);
  }

  .ai-carousel-btn-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  .ai-carousel-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 15px;
  }

  .ai-carousel-dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.5;
  }

  .ai-carousel-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
    opacity: 1;transform: scale(1.2);
  }

  .ai-hidden-{{ ai_gen_id }} {
    display: none;
  }

  @media screen and (max-width: 990px) {
    .ai-collection-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_tablet }}, 1fr);
    }

    .ai-collection-item-{{ ai_gen_id }} {
      min-width: calc({{ 100 | divided_by: block.settings.carousel_columns_tablet }}% - {{ block.settings.grid_gap | times: 0.75 }}px);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-collection-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
    }

    .ai-collection-item-{{ ai_gen_id }} {
      min-width: calc({{ 100 | divided_by: block.settings.carousel_columns_mobile }}% - {{ block.settings.grid_gap | times: 0.75 }}px);
    }
    .ai-collection-image-{{ ai_gen_id }} {
    height: auto;
  }
    .ai-collection-title-{{ ai_gen_id }} {
    padding: 10px;
    font-size: 14px;
    }
  }
{% endstyle %}

<collection-list-{{ ai_gen_id }}
  class="ai-collection-list-{{ ai_gen_id }}"
  data-layout="{{ block.settings.layout_type }}"
  data-desktop-columns="{{ block.settings.carousel_columns_desktop }}"
  data-tablet-columns="{{ block.settings.carousel_columns_tablet }}"
  data-mobile-columns="{{ block.settings.carousel_columns_mobile }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-collection-list-container-{{ ai_gen_id }}">
    {% if block.settings.layout_type == 'grid' %}
      <div class="ai-collection-grid-{{ ai_gen_id }}" id="ai-collection-grid-{{ ai_gen_id }}">
        {% for collection in block.settings.collection_list %}
          {% assign item_index = forloop.index %}
          {% assign is_hidden = false %}
          {% if item_index > 8 %}
            {% assign is_hidden = true %}
          {% endif %}

          <a
            href="{% if block.settings.custom_url != blank %}{{ block.settings.custom_url }}{% else %}{{ collection.url }}{% endif %}"
            class="ai-collection-item-{{ ai_gen_id }} {% if is_hidden %}ai-hidden-{{ ai_gen_id }}{% endif %}"
            data-item-index="{{ item_index }}"
          >
            <div class="ai-collection-image-{{ ai_gen_id }}">
              {% if collection.featured_image %}
                <img
                  src="{{ collection.featured_image | image_url: width: 500 }}"
                  alt="{{ collection.featured_image.alt | escape }}"
                  loading="lazy"
                  width="500"
                  height="{{ block.settings.image_height }}"
                >
              {% else %}
                <div class="ai-collection-image-placeholder-{{ ai_gen_id }}">
                  {{ 'collection-1' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </div>
            <h3 class="ai-collection-title-{{ ai_gen_id }}">{{ collection.title }}</h3>
          </a>
        {% endfor %}
      </div>

       {% if item_index > 8 %}
        <button
          class="ai-show-more-btn-{{ ai_gen_id }}"
          id="ai-show-more-btn-{{ ai_gen_id }}"
        >
          {{ block.settings.show_more_text }}
        </button>
      {% endif %}

    {% else %}
      <div class="ai-collection-carousel-{{ ai_gen_id }}">
        <div class="ai-collection-carousel-track-{{ ai_gen_id }}" id="ai-carousel-track-{{ ai_gen_id }}">
          {% for collection in block.settings.collection_list %}<a
              href="{% if block.settings.custom_url != blank %}{{ block.settings.custom_url }}{% else %}{{ collection.url }}{% endif %}"
              class="ai-collection-item-{{ ai_gen_id }}"
            >
              <div class="ai-collection-image-{{ ai_gen_id }}">
                {% if collection.featured_image %}
                  <img
                    src="{{ collection.featured_image | image_url: width: 500 }}"
                    alt="{{ collection.featured_image.alt | escape }}"
                    loading="lazy"
                    width="500"
                    height="{{ block.settings.image_height }}"
                  >
                {% else %}
                  <div class="ai-collection-image-placeholder-{{ ai_gen_id }}">
                    {{ 'collection-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>
              <h3 class="ai-collection-title-{{ ai_gen_id }}">{{ collection.title }}</h3>
            </a>
          {% endfor %}
        </div>

        <div class="ai-carousel-controls-{{ ai_gen_id }}">
          <button class="ai-carousel-btn-{{ ai_gen_id }}" id="ai-prev-btn-{{ ai_gen_id }}">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15,18 9,12 15,6"></polyline>
            </svg>
          </button>
          <button class="ai-carousel-btn-{{ ai_gen_id }}" id="ai-next-btn-{{ ai_gen_id }}">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="9,18 15,12 9,6"></polyline>
            </svg>
          </button>
        </div>

        <div class="ai-carousel-dots-{{ ai_gen_id }}" id="ai-carousel-dots-{{ ai_gen_id }}"></div>
      </div>
    {% endif %}
  </div>
</collection-list-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionList{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.itemsPerSlide = 4;
        this.isShowingMore = false;
      }

      connectedCallback() {
        this.layout = this.dataset.layout;
        this.desktopColumns = parseInt(this.dataset.desktopColumns);
        this.tabletColumns = parseInt(this.dataset.tabletColumns);
        this.mobileColumns = parseInt(this.dataset.mobileColumns);

        if (this.layout === 'grid') {
          this.initGrid();
        } else {
          this.initCarousel();
        }

        window.addEventListener('resize', () => {
          if (this.layout === 'carousel') {
            this.updateItemsPerSlide();
            this.updateCarousel();
          }
        });
      }

      initGrid() {
        const showMoreBtn = this.querySelector('#ai-show-more-btn-{{ ai_gen_id }}');
        if (showMoreBtn) {
          showMoreBtn.addEventListener('click', () => {
            this.toggleShowMore();
          });
        }
      }

      toggleShowMore() {
  const allItems = this.querySelectorAll('[data-item-index]');
  const showMoreBtn = this.querySelector('#ai-show-more-btn-{{ ai_gen_id }}');

  if (!this.isShowingMore) {
    allItems.forEach(item => {
      item.classList.remove('ai-hidden-{{ ai_gen_id }}');
    });
    showMoreBtn.textContent = '{{ block.settings.show_less_text }}';
    this.isShowingMore = true;
  } else {
    allItems.forEach(item => {
      const index = parseInt(item.getAttribute('data-item-index'));
      if (index > 8) {
        item.classList.add('ai-hidden-{{ ai_gen_id }}');
      }
    });
    showMoreBtn.textContent = '{{ block.settings.show_more_text }}';
    this.isShowingMore = false;
  }
}

      initCarousel() {
        this.track = this.querySelector('#ai-carousel-track-{{ ai_gen_id }}');
        this.prevBtn = this.querySelector('#ai-prev-btn-{{ ai_gen_id }}');
        this.nextBtn = this.querySelector('#ai-next-btn-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('#ai-carousel-dots-{{ ai_gen_id }}');
        this.items = this.querySelectorAll('.ai-collection-item-{{ ai_gen_id }}');

        this.updateItemsPerSlide();
        this.createDots();
        this.updateCarousel();

        this.prevBtn.addEventListener('click', () => this.prevSlide());
        this.nextBtn.addEventListener('click', () => this.nextSlide());
      }

      updateItemsPerSlide() {
        const width = window.innerWidth;
        if (width <= 749) {
          this.itemsPerSlide = this.mobileColumns;
        } else if (width <= 990) {
          this.itemsPerSlide = this.tabletColumns;
        } else {
          this.itemsPerSlide = this.desktopColumns;
        }
      }

      createDots() {
        if (!this.dotsContainer) return;
        
        this.dotsContainer.innerHTML = '';
        const totalSlides = Math.ceil(this.items.length / this.itemsPerSlide);
        
        for (let i = 0; i < totalSlides; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-carousel-dot-{{ ai_gen_id }}';
          if (i === 0) dot.classList.add('active');
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      updateCarousel() {
        if (!this.track) return;
        
        const translateX = -this.currentSlide * (100 / this.itemsPerSlide);
        this.track.style.transform = `translateX(${translateX}%)`;
        
        this.updateButtons();
        this.updateDots();
      }

      updateButtons() {
        const totalSlides = Math.ceil(this.items.length / this.itemsPerSlide);
        this.prevBtn.disabled = this.currentSlide === 0;
        this.nextBtn.disabled = this.currentSlide >= totalSlides - 1;
      }

      updateDots() {
        const dots = this.querySelectorAll('.ai-carousel-dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateCarousel();
        }
      }

      nextSlide() {
        const totalSlides = Math.ceil(this.items.length / this.itemsPerSlide);
        if (this.currentSlide < totalSlides - 1) {
          this.currentSlide++;
          this.updateCarousel();
        }
      }

      goToSlide(slideIndex) {
        this.currentSlide = slideIndex;
        this.updateCarousel();
      }
    }

    customElements.define('collection-list-{{ ai_gen_id }}', CollectionList{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection List",
  "settings": [
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "collection_list",
      "id": "collection_list",
      "label": "Collections",
      "limit": 20
    },
    {
      "type": "url",
      "id": "custom_url",
      "label": "Custom URL"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "layout_type",
      "label": "Layout type",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "carousel",
          "label": "Carousel"
        }
      ],
      "default": "grid"
    },
    {
      "type": "select",
      "id": "columns_tablet",
      "label": "Columns on tablet (Grid)",
      "options": [
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        }
      ],
      "default": "3"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile (Grid)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "carousel_columns_desktop",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Columns on desktop (Carousel)",
      "default": 4
    },
    {
      "type": "range",
      "id": "carousel_columns_tablet",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Columns on tablet (Carousel)",
      "default": 3
    },
    {
      "type": "range",
      "id": "carousel_columns_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Columns on mobile (Carousel)",
      "default": 2
    },
    {
      "type": "header",
      "content": "Show More Button"
    },
    {
      "type": "text",
      "id": "show_more_text",
      "label": "Show more text",
      "default": "Show More"
    },
    {
      "type": "text",
      "id": "show_less_text",
      "label": "Show less text",
      "default": "Show Less"
    },
    {
      "type": "header",
      "content": "Section Padding"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding Bottom",
      "default": 40
    },
    
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Grid gap",
      "default": 20
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 150,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 250
    },
    {
      "type": "color",
      "id": "item_background_color",
      "label": "Item background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Title Style"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "title_font_weight",
      "min": 300,
      "max": 700,
      "step": 100,
      "label": "Title font weight",
      "default": 600
    },
    {
      "type": "range",
      "id": "title_padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Title padding",
      "default": 16
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "title_hover_color",
      "label": "Title hover color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Button Style"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_background_color",
      "label": "Button hover background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Button hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_border_color",
      "label": "Button hover border color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    },
    {
      "type": "header",
      "content": "Carousel Controls"
    },
    {
      "type": "color",
      "id": "carousel_button_color",
      "label": "Carousel button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "carousel_button_icon_color",
      "label": "Carousel button icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "carousel_button_hover_color",
      "label": "Carousel button hover color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#000000"
    }
  ],
  "presets": [
    {
      "name": "Collection List"
    }
  ]
}
{% endschema %}