{% doc %}
  @prompt
    I want image below text section 
    Per row 4 column
    after 2 column 
    show more button, i want 16 blocks

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-image-text-grid-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-image-text-grid__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-image-text-grid__header-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 40px;
  }

  .ai-image-text-grid__title-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    margin: 0 0 16px;
    font-size: {{ block.settings.title_size }}px;
  }

  .ai-image-text-grid__description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    margin: 0;
    font-size: {{ block.settings.description_size }}px;
    opacity: 0.8;
  }

  .ai-image-text-grid__grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: {{ block.settings.grid_gap }}px;
    margin-bottom: 40px;
  }

  .ai-image-text-grid__item-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    text-align: center;
    opacity: 1;
    transition: opacity 0.3s ease;
  }

  .ai-image-text-grid__item-{{ ai_gen_id }}.hidden {
    display: none;
  }

  .ai-image-text-grid__image-wrapper-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: 1;
    margin-bottom: 16px;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
    background-color: #f4f4f4;
  }

  .ai-image-text-grid__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-image-text-grid__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f4f4f4;}

  .ai-image-text-grid__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-image-text-grid__text-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.item_text_size }}px;
    line-height: 1.4;
  }

  .ai-image-text-grid__show-more-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
  }

  .ai-image-text-grid__button-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    padding: 12px 24px;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-image-text-grid__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-image-text-grid__button-{{ ai_gen_id }}.hidden {
    display: none;
  }

  @media screen and (max-width: 990px) {
    .ai-image-text-grid__grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-image-text-grid__grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
    }

    .ai-image-text-grid__container-{{ ai_gen_id }} {
      padding: 0 16px;
    }
  }
{% endstyle %}

<image-text-grid-{{ ai_gen_id }}
  class="ai-image-text-grid-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-image-text-grid__container-{{ ai_gen_id }}">
    {% if block.settings.title != blank or block.settings.description != blank %}
      <div class="ai-image-text-grid__header-{{ ai_gen_id }}">
        {% if block.settings.title != blank %}
          <h2 class="ai-image-text-grid__title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
        {% endif %}
        {% if block.settings.description != blank %}
          <div class="ai-image-text-grid__description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-image-text-grid__grid-{{ ai_gen_id }}">
      {% for i in (1..16) %}
        {% liquid
          assign image_key = 'image_' | append: i
          assign text_key = 'text_' | append: i
          assign image = block.settings[image_key]
          assign text = block.settings[text_key]
        %}

        {% if image != blank or text != blank %}
          <div 
            class="ai-image-text-grid__item-{{ ai_gen_id }}{% if i > 2 %} hidden{% endif %}"
            data-item="{{ i }}"
          >
            <div class="ai-image-text-grid__image-wrapper-{{ ai_gen_id }}">
              {% if image != blank %}
                <img
                  src="{{ image | image_url: width: 400 }}"
                  alt="{{ image.alt | escape }}"
                  class="ai-image-text-grid__image-{{ ai_gen_id }}"loading="lazy"
                  width="400"
                  height="400"
                >
              {% else %}
                <div class="ai-image-text-grid__image-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </div>
            {% if text != blank %}
              <div class="ai-image-text-grid__text-{{ ai_gen_id }}">{{ text }}</div>
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div><div class="ai-image-text-grid__show-more-{{ ai_gen_id }}">
      <button 
        class="ai-image-text-grid__button-{{ ai_gen_id }}"
        data-show-more-button>
        {{ block.settings.show_more_text }}
      </button>
    </div>
  </div>
</image-text-grid-{{ ai_gen_id }}>

<script>
  (function() {
    class ImageTextGrid{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.itemsPerPage = 4;
        this.currentPage = 1;
        this.totalItems = 0;
      }

      connectedCallback() {
        this.items = this.querySelectorAll('.ai-image-text-grid__item-{{ ai_gen_id }}');
        this.showMoreButton = this.querySelector('[data-show-more-button]');
        this.totalItems = this.items.length;

        if (this.showMoreButton) {
          this.showMoreButton.addEventListener('click', () => this.showMoreItems());
        }

        this.updateButtonVisibility();
      }

      showMoreItems() {
        const startIndex = this.currentPage * this.itemsPerPage;
        const endIndex = Math.min(startIndex + this.itemsPerPage, this.totalItems);

        for (let i = startIndex; i < endIndex; i++) {
          if (this.items[i]) {
            this.items[i].classList.remove('hidden');
          }
        }

        this.currentPage++;
        this.updateButtonVisibility();
      }

      updateButtonVisibility() {
        const visibleItems = this.currentPage * this.itemsPerPage;
        if (visibleItems >= this.totalItems) {
          this.showMoreButton.classList.add('hidden');
        }
      }
    }

    customElements.define('image-text-grid-{{ ai_gen_id }}', ImageTextGrid{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image Text Grid",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section Header"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Our Features"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Discover what makes us special"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 32
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Grid Items"
    },
    {
      "type": "range",
      "id": "item_text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Item text size",
      "default": 14
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "text",
      "id": "text_1",
      "label": "Text 1",
      "default": "Feature one"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "text",
      "id": "text_2",
      "label": "Text 2",
      "default": "Feature two"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "text",
      "id": "text_3",
      "label": "Text 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "text",
      "id": "text_4",
      "label": "Text 4"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5"
    },
    {
      "type": "text",
      "id": "text_5",
      "label": "Text 5"
    },
    {
      "type": "image_picker",
      "id": "image_6",
      "label": "Image 6"
    },
    {
      "type": "text",
      "id": "text_6",
      "label": "Text 6"
    },
    {
      "type": "image_picker",
      "id": "image_7",
      "label": "Image 7"
    },
    {
      "type": "text",
      "id": "text_7",
      "label": "Text 7"
    },
    {
      "type": "image_picker",
      "id": "image_8",
      "label": "Image 8"
    },
    {
      "type": "text",
      "id": "text_8",
      "label": "Text 8"
    },
    {
      "type": "image_picker",
      "id": "image_9",
      "label": "Image 9"
    },
    {
      "type": "text",
      "id": "text_9",
      "label": "Text 9"
    },
    {
      "type": "image_picker",
      "id": "image_10",
      "label": "Image 10"
    },
    {
      "type": "text",
      "id": "text_10",
      "label": "Text 10"
    },
    {
      "type": "image_picker",
      "id": "image_11",
      "label": "Image 11"
    },
    {
      "type": "text",
      "id": "text_11",
      "label": "Text 11"
    },
    {
      "type": "image_picker",
      "id": "image_12",
      "label": "Image 12"
    },
    {
      "type": "text",
      "id": "text_12",
      "label": "Text 12"
    },
    {
      "type": "image_picker",
      "id": "image_13",
      "label": "Image 13"
    },
    {
      "type": "text",
      "id": "text_13",
      "label": "Text 13"
    },
    {
      "type": "image_picker",
      "id": "image_14",
      "label": "Image 14"
    },
    {
      "type": "text",
      "id": "text_14",
      "label": "Text 14"
    },
    {
      "type": "image_picker",
      "id": "image_15",
      "label": "Image 15"
    },
    {
      "type": "text",
      "id": "text_15",
      "label": "Text 15"
    },
    {
      "type": "image_picker",
      "id": "image_16",
      "label": "Image 16"
    },
    {
      "type": "text",
      "id": "text_16",
      "label": "Text 16"
    },
    {
      "type": "header",
      "content": "Show More Button"
    },
    {
      "type": "text",
      "id": "show_more_text",
      "label": "Show more button text",
      "default": "Show More"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {"value": "1", "label": "1"},
        {"value": "2", "label": "2"}
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Grid gap",
      "default": 24
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 8
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Image Text Grid"
    }
  ]
}
{% endschema %}