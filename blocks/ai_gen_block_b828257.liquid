{% doc %}
  @prompt
    enaku store open ana odaney popup varanum popup la login with otp form venum... ipo mobile num vechu otp send panathuku aprm popup varakudathu
    
    also section ah create pani kudu not in blocks because want to add below header

{% enddoc %}
{% assign ai_gen_id = section.id | replace: '_', '' | downcase %}

{% style %}
  .ai-otp-popup-overlay-{{ ai_gen_id }} {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .ai-otp-popup-overlay-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
  }

  .ai-otp-popup-container-{{ ai_gen_id }} {
    background-color: {{ section.settings.popup_background_color }};
    border-radius: {{ section.settings.border_radius }}px;
    padding: 40px;
    max-width: 400px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    transform: scale(0.8);
    transition: transform 0.3s ease;
  }

  .ai-otp-popup-overlay-{{ ai_gen_id }}.active .ai-otp-popup-container-{{ ai_gen_id }} {
    transform: scale(1);
  }

  .ai-otp-popup-close-{{ ai_gen_id }} {
    position: absolute;
    top: 15px;
    right: 15px;
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: {{ section.settings.text_color }};
    padding: 5px;
    line-height: 1;
  }

  .ai-otp-popup-close-{{ ai_gen_id }}:hover {
    opacity: 0.7;
  }

  .ai-otp-popup-title-{{ ai_gen_id }} {
    color: {{ section.settings.text_color }};
    font-size: {{ section.settings.title_size }}px;
    margin: 0 0 10px 0;
    text-align: center;
  }

  .ai-otp-popup-subtitle-{{ ai_gen_id }} {
    color: {{ section.settings.text_color }};
    font-size: {{ section.settings.subtitle_size }}px;
    margin: 0 0 30px 0;
    text-align: center;
    opacity: 0.8;
  }

  .ai-otp-form-step-{{ ai_gen_id }} {
    display: none;
  }

  .ai-otp-form-step-{{ ai_gen_id }}.active {
    display: block;
  }

  .ai-otp-form-group-{{ ai_gen_id }} {
    margin-bottom: 20px;
  }

  .ai-otp-form-label-{{ ai_gen_id }} {
    display: block;
    color: {{ section.settings.text_color }};
    font-size: 14px;
    margin-bottom: 8px;
  }

  .ai-otp-form-input-{{ ai_gen_id }} {
    width: 100%;
    padding: 12px 16px;
    border: 1px solid {{ section.settings.input_border_color }};
    border-radius: {{ section.settings.input_border_radius }}px;
    font-size: 16px;
    background-color: {{ section.settings.input_background_color }};
    color: {{ section.settings.text_color }};
    box-sizing: border-box;
  }

  .ai-otp-form-input-{{ ai_gen_id }}:focus {
    outline: none;
    border-color: {{ section.settings.button_color }};
  }

  .ai-otp-code-inputs-{{ ai_gen_id }} {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-bottom: 20px;
  }

  .ai-otp-code-input-{{ ai_gen_id }} {
    width: 50px;
    height: 50px;
    text-align: center;
    font-size: 18px;
    font-weight: bold;
    border: 2px solid {{ section.settings.input_border_color }};
    border-radius: {{ section.settings.input_border_radius }}px;
    background-color: {{ section.settings.input_background_color }};
    color: {{ section.settings.text_color }};
  }

  .ai-otp-code-input-{{ ai_gen_id }}:focus {
    outline: none;
    border-color: {{ section.settings.button_color }};
  }

  .ai-otp-form-button-{{ ai_gen_id }} {
    width: 100%;
    padding: 14px;
    background-color: {{ section.settings.button_color }};
    color: {{ section.settings.button_text_color }};
    border: none;
    border-radius: {{ section.settings.button_border_radius }}px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-otp-form-button-{{ ai_gen_id }}:hover {
    background-color: {{ section.settings.button_hover_color }};
  }

  .ai-otp-form-button-{{ ai_gen_id }}:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }

  .ai-otp-resend-link-{{ ai_gen_id }} {
    display: block;
    text-align: center;
    margin-top: 15px;
    color: {{ section.settings.button_color }};
    text-decoration: underline;
    cursor: pointer;
    font-size: 14px;
  }

  .ai-otp-resend-link-{{ ai_gen_id }}:hover {
    opacity: 0.8;
  }

  .ai-otp-error-message-{{ ai_gen_id }} {
    color: {{ section.settings.error_color }};
    font-size: 14px;
    margin-top: 10px;
    text-align: center;
    display: none;
  }

  .ai-otp-success-message-{{ ai_gen_id }} {
    color: {{ section.settings.success_color }};
    font-size: 14px;
    margin-top: 10px;
    text-align: center;
    display: none;
  }

  .ai-otp-timer-{{ ai_gen_id }} {
    text-align: center;
    margin-top: 10px;
    font-size: 14px;
    color: {{ section.settings.text_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-otp-popup-container-{{ ai_gen_id }} {
      padding: 30px 20px;
    }

    .ai-otp-code-input-{{ ai_gen_id }} {
      width: 45px;
      height: 45px;
      font-size: 16px;
    }
  }
{% endstyle %}

<otp-login-popup-{{ ai_gen_id }} class="ai-otp-popup-overlay-{{ ai_gen_id }}" id="otpPopup{{ ai_gen_id }}">
  <div class="ai-otp-popup-container-{{ ai_gen_id }}">
    <button class="ai-otp-popup-close-{{ ai_gen_id }}" aria-label="Close popup">&times;</button>
    <h2 class="ai-otp-popup-title-{{ ai_gen_id }}">{{ section.settings.popup_title }}</h2>
    <p class="ai-otp-popup-subtitle-{{ ai_gen_id }}">{{ section.settings.popup_subtitle }}</p>

    <div class="ai-otp-form-step-{{ ai_gen_id }} active" id="phoneStep{{ ai_gen_id }}">
      <div class="ai-otp-form-group-{{ ai_gen_id }}">
        <label class="ai-otp-form-label-{{ ai_gen_id }}" for="phoneNumber{{ ai_gen_id }}">{{ section.settings.phone_label }}</label>
        <input 
          type="tel" 
          id="phoneNumber{{ ai_gen_id }}" 
          class="ai-otp-form-input-{{ ai_gen_id }}"
          placeholder="{{ section.settings.phone_placeholder }}"
          required
        >
      </div>
      <button type="button" class="ai-otp-form-button-{{ ai_gen_id }}" id="sendOtpBtn{{ ai_gen_id }}">
        {{ section.settings.send_otp_button_text }}
      </button>
      <div class="ai-otp-error-message-{{ ai_gen_id }}" id="phoneError{{ ai_gen_id }}"></div>
    </div>

    <div class="ai-otp-form-step-{{ ai_gen_id }}" id="otpStep{{ ai_gen_id }}">
      <div class="ai-otp-form-group-{{ ai_gen_id }}">
        <label class="ai-otp-form-label-{{ ai_gen_id }}">{{ section.settings.otp_label }}</label>
        <div class="ai-otp-code-inputs-{{ ai_gen_id }}">
          <input type="text" class="ai-otp-code-input-{{ ai_gen_id }}" maxlength="1" data-index="0">
          <input type="text" class="ai-otp-code-input-{{ ai_gen_id }}" maxlength="1" data-index="1">
          <input type="text" class="ai-otp-code-input-{{ ai_gen_id }}" maxlength="1" data-index="2">
          <input type="text" class="ai-otp-code-input-{{ ai_gen_id }}" maxlength="1" data-index="3">
          <input type="text" class="ai-otp-code-input-{{ ai_gen_id }}" maxlength="1" data-index="4">
          <input type="text" class="ai-otp-code-input-{{ ai_gen_id }}" maxlength="1" data-index="5">
        </div>
      </div>
      <button type="button" class="ai-otp-form-button-{{ ai_gen_id }}" id="verifyOtpBtn{{ ai_gen_id }}">
        {{ section.settings.verify_otp_button_text }}
      </button>
      <div class="ai-otp-timer-{{ ai_gen_id }}" id="otpTimer{{ ai_gen_id }}"></div>
      <a class="ai-otp-resend-link-{{ ai_gen_id }}" id="resendOtp{{ ai_gen_id }}" style="display: none;">
        {{ section.settings.resend_otp_text }}
      </a>
      <div class="ai-otp-error-message-{{ ai_gen_id }}" id="otpError{{ ai_gen_id }}"></div>
      <div class="ai-otp-success-message-{{ ai_gen_id }}" id="otpSuccess{{ ai_gen_id }}"></div>
    </div>
  </div>
</otp-login-popup-{{ ai_gen_id }}>

<script>
  (function() {
    class OtpLoginPopup{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.isOtpSent = false;
        this.timer = null;
        this.timeLeft = 0;
      }

      connectedCallback() {
        this.setupEventListeners();
        this.checkFirstVisit();
      }

      checkFirstVisit() {
        const hasVisited = localStorage.getItem('otpPopupShown{{ ai_gen_id }}');
        if (!hasVisited) {
          setTimeout(() => {
            this.showPopup();
          }, {{ section.settings.popup_delay | times: 1000 }});
        }
      }

      setupEventListeners() {
        const closeBtn = this.querySelector('.ai-otp-popup-close-{{ ai_gen_id }}');
        const sendOtpBtn = this.querySelector('#sendOtpBtn{{ ai_gen_id }}');
        const verifyOtpBtn = this.querySelector('#verifyOtpBtn{{ ai_gen_id }}');
        const resendLink = this.querySelector('#resendOtp{{ ai_gen_id }}');
        const phoneInput = this.querySelector('#phoneNumber{{ ai_gen_id }}');
        const otpInputs = this.querySelectorAll('.ai-otp-code-input-{{ ai_gen_id }}');

        closeBtn.addEventListener('click', () => this.hidePopup());
        sendOtpBtn.addEventListener('click', () => this.sendOtp());
        verifyOtpBtn.addEventListener('click', () => this.verifyOtp());
        resendLink.addEventListener('click', () => this.resendOtp());

        phoneInput.addEventListener('keypress', (e) => {
          if (e.key === 'Enter') this.sendOtp();
        });

        this.addEventListener('click', (e) => {
          if (e.target === this) this.hidePopup();
        });

        otpInputs.forEach((input, index) => {
          input.addEventListener('input', (e) => this.handleOtpInput(e, index));
          input.addEventListener('keydown', (e) => this.handleOtpKeydown(e, index));
        });
      }

      showPopup() {
        this.classList.add('active');
        document.body.style.overflow = 'hidden';
      }

      hidePopup() {
        this.classList.remove('active');
        document.body.style.overflow = '';
        if (this.isOtpSent) {
          localStorage.setItem('otpPopupShown{{ ai_gen_id }}', 'true');
        }
      }

      sendOtp() {
        const phoneInput = this.querySelector('#phoneNumber{{ ai_gen_id }}');
        const phoneNumber = phoneInput.value.trim();
        const errorDiv = this.querySelector('#phoneError{{ ai_gen_id }}');

        if (!phoneNumber) {
          this.showError(errorDiv, 'Please enter your phone number');
          return;
        }

        if (!/^[6-9]\d{9}$/.test(phoneNumber)) {
          this.showError(errorDiv, 'Please enter a valid 10-digit phone number');
          return;
        }

        this.hideError(errorDiv);
        
        const sendBtn = this.querySelector('#sendOtpBtn{{ ai_gen_id }}');
        sendBtn.disabled = true;
        sendBtn.textContent = 'Sending...';

        setTimeout(() => {
          this.isOtpSent = true;
          this.showOtpStep();
          this.startTimer();
          sendBtn.disabled = false;
          sendBtn.textContent = '{{ section.settings.send_otp_button_text }}';
        }, 2000);
      }

      showOtpStep() {
        this.querySelector('#phoneStep{{ ai_gen_id }}').classList.remove('active');
        this.querySelector('#otpStep{{ ai_gen_id }}').classList.add('active');
        this.querySelector('.ai-otp-popup-title-{{ ai_gen_id }}').textContent = '{{ section.settings.otp_verification_title }}';
        this.querySelector('.ai-otp-popup-subtitle-{{ ai_gen_id }}').textContent = '{{ section.settings.otp_verification_subtitle }}';
      }

      handleOtpInput(e, index) {
        const input = e.target;
        const value = input.value;

        if (!/^\d$/.test(value)) {
          input.value = '';
          return;
        }

        if (value && index < 5) {
          const nextInput = this.querySelector(`[data-index="${index + 1}"]`);
          if (nextInput) nextInput.focus();
        }

        this.checkOtpComplete();
      }

      handleOtpKeydown(e, index) {
        if (e.key === 'Backspace' && !e.target.value && index > 0) {
          const prevInput = this.querySelector(`[data-index="${index - 1}"]`);
          if (prevInput) {
            prevInput.focus();
            prevInput.value = '';
          }
        }
      }

      checkOtpComplete() {
        const otpInputs = this.querySelectorAll('.ai-otp-code-input-{{ ai_gen_id }}');
        const otp = Array.from(otpInputs).map(input => input.value).join('');
        
        if (otp.length === 6) {
          this.verifyOtp();
        }
      }

      verifyOtp() {
        const otpInputs = this.querySelectorAll('.ai-otp-code-input-{{ ai_gen_id }}');
        const otp = Array.from(otpInputs).map(input => input.value).join('');
        const errorDiv = this.querySelector('#otpError{{ ai_gen_id }}');
        const successDiv = this.querySelector('#otpSuccess{{ ai_gen_id }}');

        if (otp.length !== 6) {
          this.showError(errorDiv, 'Please enter the complete 6-digit OTP');
          return;
        }

        const verifyBtn = this.querySelector('#verifyOtpBtn{{ ai_gen_id }}');
        verifyBtn.disabled = true;
        verifyBtn.textContent = 'Verifying...';

        setTimeout(() => {
          if (otp === '123456') {
            this.hideError(errorDiv);
            this.showSuccess(successDiv, '{{ section.settings.success_message }}');
            setTimeout(() => {
              this.hidePopup();
              localStorage.setItem('otpPopupShown{{ ai_gen_id }}', 'true');
            }, 2000);
          } else {
            this.showError(errorDiv, 'Invalid OTP. Please try again.');
            otpInputs.forEach(input => input.value = '');
            otpInputs[0].focus();
          }
          verifyBtn.disabled = false;
          verifyBtn.textContent = '{{ section.settings.verify_otp_button_text }}';
        }, 1500);
      }

      resendOtp() {
        const resendLink = this.querySelector('#resendOtp{{ ai_gen_id }}');
        resendLink.style.display = 'none';
        this.startTimer();
      }

      startTimer() {
        this.timeLeft = {{ section.settings.otp_timer_duration }};
        const timerDiv = this.querySelector('#otpTimer{{ ai_gen_id }}');
        const resendLink = this.querySelector('#resendOtp{{ ai_gen_id }}');
        
        resendLink.style.display = 'none';
        
        this.timer = setInterval(() => {
          const minutes = Math.floor(this.timeLeft / 60);
          const seconds = this.timeLeft % 60;
          timerDiv.textContent = `Resend OTP in ${minutes}:${seconds.toString().padStart(2, '0')}`;
          
          this.timeLeft--;
          
          if (this.timeLeft < 0) {
            clearInterval(this.timer);
            timerDiv.textContent = '';
            resendLink.style.display = 'block';
          }
        }, 1000);
      }

      showError(element, message) {
        element.textContent = message;
        element.style.display = 'block';
      }

      hideError(element) {
        element.style.display = 'none';
      }

      showSuccess(element, message) {
        element.textContent = message;
        element.style.display = 'block';
      }

      disconnectedCallback() {
        if (this.timer) {
          clearInterval(this.timer);
        }
      }
    }

    customElements.define('otp-login-popup-{{ ai_gen_id }}', OtpLoginPopup{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "OTP Login Popup",
  "settings": [
    {
      "type": "header",
      "content": "Popup Settings"
    },
    {
      "type": "range",
      "id": "popup_delay",
      "min": 1,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Popup delay",
      "default": 3
    },
    {
      "type": "text",
      "id": "popup_title",
      "label": "Popup title",
      "default": "Welcome! Login to Continue"
    },
    {
      "type": "text",
      "id": "popup_subtitle",
      "label": "Popup subtitle",
      "default": "Enter your mobile number to get started"
    },
    {
      "type": "text",
      "id": "otp_verification_title",
      "label": "OTP verification title",
      "default": "Verify Your Number"
    },
    {
      "type": "text",
      "id": "otp_verification_subtitle",
      "label": "OTP verification subtitle",
      "default": "Enter the 6-digit code sent to your mobile"
    },
    {
      "type": "header",
      "content": "Form Labels"
    },
    {
      "type": "text",
      "id": "phone_label",
      "label": "Phone number label",
      "default": "Mobile Number"
    },
    {
      "type": "text",
      "id": "phone_placeholder",
      "label": "Phone number placeholder",
      "default": "Enter your 10-digit mobile number"
    },
    {
      "type": "text",
      "id": "otp_label",
      "label": "OTP label",
      "default": "Enter OTP"
    },
    {
      "type": "text",
      "id": "send_otp_button_text",
      "label": "Send OTP button text",
      "default": "Send OTP"
    },
    {
      "type": "text",
      "id": "verify_otp_button_text",
      "label": "Verify OTP button text",
      "default": "Verify & Login"
    },
    {
      "type": "text",
      "id": "resend_otp_text",
      "label": "Resend OTP text",
      "default": "Resend OTP"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Login successful! Redirecting..."
    },
    {
      "type": "range",
      "id": "otp_timer_duration",
      "min": 30,
      "max": 300,
      "step": 30,
      "unit": "s",
      "label": "OTP timer duration",
      "default": 120
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "popup_background_color",
      "label": "Popup background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "input_background_color",
      "label": "Input background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "error_color",
      "label": "Error color",
      "default": "#d82c0d"
    },
    {
      "type": "color",
      "id": "success_color",
      "label": "Success color",
      "default": "#008060"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 24
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Popup border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "input_border_radius",
      "min": 0,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Input border radius",
      "default": 6
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "OTP Login Popup"
    }
  ]
}
{% endschema %}